class Solution {
    public int[][] merge(int[][] intervals) {
        
        Arrays.sort(intervals, new Comparator<int[]>(){
            @Override
            public int compare(int[] a, int[] b){
                
                if(a[0] < b[0])
                    return -1;
                else if(a[0] > b[0])
                    return 1;
                else
                    return a[1] - b[1];
            }
        });
        
        List<int[]> res = new ArrayList<>();
        
        
        
        int i = 0;
        while(i<intervals.length){
            int start  = intervals[i][0];
            int end = intervals[i][1];
            i++;
            while(i<intervals.length && intervals[i][0]<=end){
                end  = Math.max(end, intervals[i][1]);
                i++;
            }
                
            res.add(new int[]{start, end});
            // if(i<intervals.length){
            // start = intervals[i][0];
            // end = intervals[i][1];
            // }
        }
        //res.add(new int[]{start, end});
        //System.out.println(res);
        int[][] ans = new int[res.size()][2];
        int j = 0;
        for(int[] arr: res)
            ans[j++] = arr;
        
        return ans;
    }
}
