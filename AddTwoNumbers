/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    //Node head = new Node();
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        ListNode res = dummy;
        int carry = 0;
        while(temp1!= null || temp2!=null){
            int a = (temp1!=null)?temp1.val:0;
            int b = (temp2!=null)?temp2.val:0;
            
            int sum = a+b+carry;
            ListNode new_n = new ListNode(sum%10);
            
            carry = sum/10;
            dummy.next = new_n;
            dummy = new_n;
            temp1 = temp1!=null ? temp1.next:null;
            temp2 = temp2!=null ? temp2.next: null;
        }
        
        if(carry !=0){
            ListNode node = new ListNode(carry);
            dummy.next = node;
        }
        return res.next;
    }
}
